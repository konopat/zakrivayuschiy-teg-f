/* Здесь вы напишете основную часть стилей страницы.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

Кроме этого, не меняйте HTML переключателя тем. Его разметка также гарантирует работу своего скрипта.

*/

/* Этот класс задает ширину контента */
.canvas {
  /* При невозможности вместить во вьюпорт 700px, берется 100% от родителя 
  (раньше брал 100vw, но на винде добавлялся скролл) */
  inline-size: var(--size-content_inline); /* clamp(320px, 700px, 100%); */
  /* 100% по ширине блок прилипает к краю на широких экранах */
  margin-inline: auto; /* Поэтому добавляем автоматические отступы */
}

/* Лейаут страницы  */
.page {
  /* Грид в одну колонку с центральным позиционированием */
  display: grid;
  justify-content: center;
  /* Отступы сверху страницы постоянный, снизу адаптивный */
  padding: 102px 0 clamp(6.375rem, 6.3088rem + 0.2824vw, 6.563rem) 0;
  /* Предустановленные стили задают минимальные размеры блоков */
  min-inline-size: 320px;
  min-block-size: 100dvb; /* В контексте гридов 
  при помощи темной магии задает строке высоту, 
  нужно учитывать при верстке отступов между секциями  */
  font-family: var(--font-normal); /* Базовый шрифт */
  font-variation-settings: 'wght' var(--font-weight-regular); /* На курсе отмечалось
  как плохая практика, но в тз сказано задать вес основного шрифта именно так */
  color: var(--color-accent_color);
  /* Бэграунд страницы */
  background-color: var(--color-background_color);
  background-image: var(--background-page);
  background-size: cover;
  background-attachment: fixed;
}

.content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 50px;
  /* Отступы между основным контентом и шапкой с подвалом */
  margin-block-start: 102px;
}

/* 
  Header
*/

.header {
  /* Флекс-контейнер с контентом, прилипающим к низу */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-end;
  /* Адаптивная высота */
  min-block-size: clamp(20.188rem, 19.2859rem + 3.849vw, 22.75rem);
  /* Отступ между элементами */
  gap: 22px;
  /* Отступ снизу */
  padding-block-end: 20px;
  /* Шрифт для всего контейнера */
  font-family: var(--font-accent);
  /* Рамка */
  background-color: var(--color-background_color);
  border: 2px solid var(--color-accent_color);
}

.header__heading {
  /* Адаптивный размер шрифта основного заголовка */
  font-size: clamp(3.063rem, 2.7109rem + 1.5023vw, 4.063rem);
}

.header__subheading {
  text-transform: uppercase;
  /* Адаптивный размер шрифта подзаголовка */
  font-size: clamp(0.875rem, 0.6768rem + 0.8458vw, 1.438rem);
}

/* 
  Header – кнопки переключения темы
*/

/* Отступ между кнопками переключения темы */
.theme-menu__item:not(:last-child) {
  margin-block-end: 10px;
}

/* Кнопки переключения темы */
.theme-menu__button {
  /* Анимированная стрелка активной кнопки 
  будет псевдоэлементом с абсолютным позиционированием */
  position: relative; /* Для явного позиционирования псевдоэлементов */
  padding-inline-start: 20px; /* Отступ для псевдоэлемента */
  color: currentColor;
  text-transform: uppercase;
  font-size: 14px;
}

/* Активная кнопка переключения темы */
.theme-menu__button:disabled {
  pointer-events: none; /* не нажимается в выбранном состоянии */
}

/* Заготовка линии для подчеркивания кнопки переключения темы */
.theme-menu__button::after {
  content: '';
  display: block; /* Явно обозначаем блоком для предсказуемости поведения */
  block-size: 2px; /* Толщина линии */
  inline-size: 100%; /* Длина линии */
  background-color: currentColor;
  transform-origin: 0 0; /* Смещает точку отсчета трансформации из центра к старту осей */
  transform: scaleX(0); /* Будет изменяться при фокусировке */
}

/* Появление линии для подчеркивания кнопки переключения темы */
.theme-menu__button:focus-visible::after {
  transform: scaleX(1);
}

/* Анимированная стрелка активной кнопки переключения темы */
.theme-menu__button:disabled::before {
  /* Позиционируется относительно родителя */
  position: absolute;
  inset-inline-start: 0;
  inset-block-end: 0;
  content: '▶';
  color: currentColor;
  animation: active-element 0.5s ease-in-out infinite alternate;
}

.article-list__item:not(:last-child) {
  margin-block-end: 50px;
}
/* 
  Cards
*/

/* Общие стили для карточек */
.card {
  background-color: var(--color-background_color);
  border: solid 2px var(--color-accent_color);
}

/* Заголовки карточек */
.card__heading {
  padding: 5px 10px;
  font-size: 18px;
  font-variation-settings: 'wght' var(--font-weight-heading);
}

/* Текст в карточках */
.card__paragraph {
  padding: 0 25px; /* Отступ по бокам */
  font-size: 18px;
  line-height: 21px;
}

/* Параграфы в карточках */
/* :last-child ведет себя как-то не очевидно без дополнительных враперов в html,
поэтому я использовал :last-of-type */
p.card__paragraph:not(:last-of-type) {
  margin-block-end: 25px;
  /* В данном случае отступ снизу добавляется всем параграфам, кроме последнего */
}

/* 
  Cards – image
*/

/* Обертка изображения карточки используется для позиционирования ватемарки */
.card__image-wrapper {
  position: relative;
}

/* Картинка в карточке */
.card__image {
  inline-size: 100%;
  aspect-ratio: 1/1; /* Все картинки будут квадратными */
  /* Обрезаем по центру */
  object-fit: cover;
  object-position: center;
  /* Сверху и снизу рамка */
  border-block: solid 2px var(--color-accent_color);
  margin-block-end: 25px; /* Отступ от картинки */
}

/* Ватемарка на изображении карточки */
.card__image-label {
  position: absolute;
  /* Местоположение высчитывается от верхнего правого края в зависимости от размера экрана,
  в формуле подразумевается, что 1rem = 16px */
  inset-block-start: clamp(1.375rem, 1.3088rem + 0.2824vw, 1.563rem);
  inset-inline-end: clamp(0.75rem, 0.4637rem + 1.2214vw, 1.563rem);
  font-family: var(--font-accent);
  font-size: 14px;
  color: var(--color-accent_color);
  mix-blend-mode: hard-light;
  text-transform: uppercase;
  /* По умолчанию для браузеров, которые не поддерживают свойство text-stroke, 
  обводка текста задается тенью: */
  text-shadow: -0 -1px 0 var(--color-background_color),
    0 -1px 0 var(--color-background_color),
    -0 1px 0 var(--color-background_color),
    0 1px 0 var(--color-background_color),
    -1px -0 0 var(--color-background_color),
    1px -0 0 var(--color-background_color),
    -1px 0 0 var(--color-background_color),
    1px 0 0 var(--color-background_color),
    -1px -1px 0 var(--color-background_color),
    1px -1px 0 var(--color-background_color),
    -1px 1px 0 var(--color-background_color),
    1px 1px 0 var(--color-background_color),
    -1px -1px 0 var(--color-background_color),
    1px -1px 0 var(--color-background_color),
    -1px 1px 0 var(--color-background_color),
    1px 1px 0 var(--color-background_color);
}

/* Если браузер поддерживает свойство обводки для текста */
@supports (
  (text-stroke: 1px var(--color-background_color)) or
    (-webkit-text-stroke: 1px var(--color-background_color))
) {
  .card__image-label {
    text-shadow: none; /* Отключаем обводку с помощью тени */
    /* Используем новые свойства */
    -webkit-text-stroke: 1px var(--color-background_color);
    text-stroke: 1px var(--color-background_color);
    /* Обводка нужна снаружи, поэтому меняем порядок отрисовки */
    paint-order: stroke fill; /* По факту пока работает только в Сафари */
  }
}

/* Фильтры изображений */

.filter-contrast {
  filter: contrast(2);
}

.filter-brightness {
  filter: brightness(120%);
}

.filter-sepia {
  filter: sepia(1);
}

.filter-grayscale {
  filter: grayscale(0.5);
}

.filter-saturate {
  filter: saturate(180%);
}

.filter-hue_rotate {
  filter: hue-rotate(-30deg);
}

.filter-saturate_brightness {
  filter: saturate(180%) brightness(80%);
}

.filter-hard {
  filter: invert(1) brightness(200%) saturate(60%) hue-rotate(90deg);
}

/* 
  Cards – footer
*/

/* Футер карточек */
.card__footer {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: center;
  gap: 7px;
  padding: 25px;
}

/* Кнопка без иконки */
.card__like-button {
  padding-block: 10px;
}

/* Стили для кнопок с иконками */
.button_with_icon {
  padding-block: 15px;
  inline-size: clamp(19.125rem, 18.4866rem + 2.7238vw, 20.938rem);
}

/* Лейаут текста кнопки меняется для центрирования иконки */
.button_with_icon .button__text,
.alert_message {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
}

/* Иконка в кнопке добавляется как псевдоэлемент */
.button_with_icon .button__text::before,
.dialog__message::before {
  display: block;
  /* Размер иконки адаптивен и рассчитывается от размера экрана */
  inline-size: var(--size-button_icon_size);
  block-size: var(--size-button_icon_size);
  content: '';
  /* Сама иконка является svg маской, так удобно менять ее цвет */
  -webkit-mask: url(../svg/floppy.svg) no-repeat;
  mask: url(../svg/floppy.svg) no-repeat;
  -webkit-mask-size: cover;
  mask-size: cover;
  /* Цвет наследуется */
  background-color: currentColor;
  /* Отступ от текста */
  margin-inline-end: 8px;
}

/* 
  Явные кнопки
*/

.button {
  font-family: var(--font-accent);
  font-size: 14px;
  min-inline-size: 130px;
  background-color: var(--color-background_color);
  border: solid 2px var(--color-accent_color);
}

.button:focus-visible {
  box-shadow: 2px 2px var(--color-accent_color);
}

/* Заготовка для заливки кнопок */
.button::before {
  position: absolute;
  content: '';
  inset: 0; /* Прилипает границами ко всем краям родителя  */
  inline-size: 100%; /* Ширина */
  block-size: 100%; /* Высота */
  background-color: var(--color-accent_color); /* Цвет заливки */
  transform-origin: 0 0; /* Смещает точку отсчета трансформации из центра к старту осей */
  transform: scaleX(0); /* Будет изменяться при фокусировке */
  /* Продолжительность и стиль трансформации */
  -webkit-transition: ease-in-out 0.5s;
  -o-transition: ease-in-out 0.5s;
  transition: ease-in-out 0.5s;
}

/* Режим отображения текста на кнопке для плавной заливки */
.button__text,
.button__icon {
  color: var(--color-text_button_color);
  mix-blend-mode: difference; /* Перекрашивает в противоположный заливке цвет */
}

/* Заливка кнопки при наведении курсора */
.button:hover::before {
  transform: scaleX(1);
}

/* Полупрозрачность */
.theme-menu__button:hover,
.theme-menu__button:disabled,
.theme-menu__button:focus,
.card__image-label {
  opacity: 0.6;
}

/* 
  Модальное окно
*/

.dialog[open] {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  color: var(--color-accent_color);
  background-color: var(--color-background_color);
  padding: 30px;
  max-inline-size: clamp(21.313rem, 20.9609rem + 1.5023vw, 22.313rem);
  min-block-size: 195px;
}

/* Перекрытие */
.dialog::backdrop {
  background-color: black;
  opacity: 0.75;
}

.dialog__message {
  display: flex;
  align-items: center;
  font-family: var(--font-accent);
  font-size: 14px;
  line-height: 150%; /* 21px */
  text-transform: uppercase;
}

.dialog__message::before {
  block-size: 40px;
  inline-size: 60px;
  margin-inline-end: 19px;
}

.dialog__button {
  inline-size: 100%;
  padding-block: 10px;
}

/* Открытое модальное окно */

/* Медиазапросы */

@media (width <= 375px) {
  .button_with_icon .button__text {
    flex-direction: column;
    gap: 10px;
  }
  .button_with_icon .button__text::before {
    margin: 0;
  }
  .dialog__message::before {
    block-size: 38px;
  }
}
